{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Steven/CS-Projects/Color-Blindness-Test-App/src/pages/TestHD.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Slider from '@material-ui/core/Slider';\nimport VolumeDown from '@material-ui/icons/VolumeDown';\nimport VolumeUp from '@material-ui/icons/VolumeUp';\nimport testAudioOriginal from \"data/testDataHD\";\nimport testDataHD from \"data/testDataHD\";\nimport hdContents from \"data/hdContents\";\nimport Section from \"components/Section\";\nimport englishIcon from \"../assets/language-icons/English.JPG\";\nimport hindiIcon from \"../assets/language-icons/Hindi.JPG\";\nimport kannadaIcon from \"../assets/language-icons/Kannada.JPG\";\nimport tamilIcon from \"../assets/language-icons/Tamil.JPG\";\nimport teluguIcon from \"../assets/language-icons/Telugu.JPG\"; // const englishAudio = require.context(\"../../public/all-audio/English\", false);\n// const hindiAudio = require.context(\"../../public/all-audio/hindi\", false);\n// const kannadaAudio = require.context(\"../../public/all-audio/Kannada\", false);\n\nconst TestHD = () => {\n  _s();\n\n  const [randomIndexHD, setRandomIndexHD] = useState(0);\n  const [language, setLanguage] = useState(\"audioSrcEN\");\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [showTest, setShowTest] = useState(false);\n  const [HideLangSelect, setHideLangSelect] = useState(false);\n  const [testAudio, setTestAudio] = useState([...testAudioOriginal]);\n  const [selectedAnswer, setSelectedAnswer] = useState(\"\");\n  const [value, setValue] = useState(30);\n  const [audio, setAudio] = useState(null);\n  const [audioNumber, setAudioNumber] = useState(0);\n  useEffect(() => setAudio(document.getElementById(\"audio-element\")), [randomIndexHD, language, score, value, audio]);\n\n  const playAudio = () => {\n    audio.volume = value / 100.0; // console.log(audio.volume);\n\n    audio.play();\n  };\n\n  const checkAnswer = () => {\n    if (selectedAnswer !== \"\" && selectedAnswer === testAudio[randomIndexHD].answer) {\n      setScore(score + 1);\n    } else {\n      setScore(score + 0);\n    }\n\n    ; // console.log(score)\n  };\n\n  const nextTestAudio = () => {\n    let currentAudioArray = testAudio;\n\n    if (currentAudioArray.length > 1) {\n      currentAudioArray.splice(randomIndexHD, 1);\n      setTestAudio(currentAudioArray);\n      setRandomIndexHD(Math.floor(Math.random() * testAudio.length));\n      setAudioNumber(audioNumber + 1);\n    } else {\n      setShowScore(true);\n      setAudioNumber(0);\n      setTestAudio([...testAudioOriginal]);\n    }\n  };\n\n  const startTest = () => {\n    setShowTest(true);\n  };\n\n  const selectLanguage = lang => {\n    setHideLangSelect(true);\n    setLanguage(lang);\n  };\n\n  const submitAnswer = () => {\n    audio.pause();\n    setSelectedAnswer(\"\");\n    checkAnswer();\n    nextTestAudio();\n  };\n\n  const resetTest = () => {\n    setRandomIndexHD(0);\n    setScore(0);\n    setShowTest(false);\n    setHideLangSelect(false);\n    setShowScore(false);\n    setTestAudio([...testAudioOriginal]);\n    setAudio(document.getElementById(\"audio-element\"));\n  };\n\n  const handleToggle = answer => {\n    setSelectedAnswer(answer); // console.log(answer);\n  };\n\n  const handleVolumeChange = (event, newValue) => {\n    setValue(newValue);\n    audio.volume = value / 100.0;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-header\",\n        children: \"Hearing Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), showTest === false ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-description\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button start-button\",\n              onClick: () => {\n                startTest();\n              },\n              children: \"Start Test\"\n            }, \"hearingTestStart\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-section\",\n            children: hdContents.filter(content => content.filter === \"test\").map((info, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Section, {\n                title: info.title,\n                description: info.infos\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-section\",\n            children: hdContents.filter(content => content.filter === \"instructions\").map((info, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Section, {\n                title: info.title,\n                description: info.infos\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button\",\n            onClick: () => {\n              startTest();\n            },\n            children: \"Start Test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"audio\", {\n            id: \"audio-element\",\n            children: /*#__PURE__*/_jsxDEV(\"source\", {\n              src: testAudio[randomIndexHD][language],\n              type: \"audio/mp3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 21\n            }, this)\n          }, testAudio[randomIndexHD][language], false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }, this) : HideLangSelect === false ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-description\",\n          children: \"Select A Langugage:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"language-button\",\n            name: \"English\",\n            onClick: () => selectLanguage(\"audioSrcEN\"),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"language-icon\",\n              alt: \"english icon\",\n              src: englishIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"language-button\",\n            name: \"Hindi\",\n            onClick: () => selectLanguage(\"audioSrcHI\"),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"language-icon\",\n              alt: \"hindi icon\",\n              src: hindiIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"language-button\",\n            name: \"Kannada\",\n            onClick: () => selectLanguage(\"audioSrcKA\"),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"language-icon\",\n              alt: \"kannadaicon\",\n              src: kannadaIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"line-break\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"language-button\",\n            name: \"Tamil\",\n            onClick: () => selectLanguage(\"audioSrcTM\"),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"language-icon\",\n              alt: \"tamil icon\",\n              src: tamilIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"language-button\",\n            name: \"Telugu\",\n            onClick: () => selectLanguage(\"audioSrcTE\"),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"language-icon\",\n              alt: \"telugu icon\",\n              src: teluguIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"audio\", {\n            id: \"audio-element\",\n            children: /*#__PURE__*/_jsxDEV(\"source\", {\n              src: testAudio[randomIndexHD][language],\n              type: \"audio/mp3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 19\n            }, this)\n          }, testAudio[randomIndexHD][language], false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }, this) : showScore === false ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-description\",\n          children: [\"Press the play button, listen to the word and press the correct picture of the word. Then click submit. \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \" When you submit, a new word will be loaded and you will need to click play again \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 59\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button\",\n            onClick: playAudio,\n            children: \"Play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slider-container\",\n            children: [/*#__PURE__*/_jsxDEV(VolumeDown, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Slider, {\n              value: value,\n              onChange: handleVolumeChange,\n              \"aria-labelledby\": \"continuous-slider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(VolumeUp, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 21\n            }, this), value]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pad-container\",\n          children: testDataHD.map((pad, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `pad ${selectedAnswer === pad.answer ? \"selected\" : \"\"}`,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: pad.imgSrc,\n              alt: pad.alt,\n              onClick: () => {\n                handleToggle(pad.answer);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 23\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button\",\n            onClick: () => {\n              submitAnswer();\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"counter-container\",\n            children: [audioNumber, \" / 9\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"audio\", {\n            id: \"audio-element\",\n            children: /*#__PURE__*/_jsxDEV(\"source\", {\n              src: testAudio[randomIndexHD][language],\n              type: \"audio/mp3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 21\n            }, this)\n          }, testAudio[randomIndexHD][language], false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score\",\n          children: [\"Your score is \", score, \"/\", testAudio.length, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          onClick: () => {\n            resetTest();\n          },\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TestHD, \"ChK7I0T4VoGFXfOvhoMseLQy+eQ=\");\n\n_c = TestHD;\nexport default TestHD;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestHD\");","map":{"version":3,"sources":["/Users/Steven/CS-Projects/Color-Blindness-Test-App/src/pages/TestHD.js"],"names":["React","useEffect","useState","Slider","VolumeDown","VolumeUp","testAudioOriginal","testDataHD","hdContents","Section","englishIcon","hindiIcon","kannadaIcon","tamilIcon","teluguIcon","TestHD","randomIndexHD","setRandomIndexHD","language","setLanguage","score","setScore","showScore","setShowScore","showTest","setShowTest","HideLangSelect","setHideLangSelect","testAudio","setTestAudio","selectedAnswer","setSelectedAnswer","value","setValue","audio","setAudio","audioNumber","setAudioNumber","document","getElementById","playAudio","volume","play","checkAnswer","answer","nextTestAudio","currentAudioArray","length","splice","Math","floor","random","startTest","selectLanguage","lang","submitAnswer","pause","resetTest","handleToggle","handleVolumeChange","event","newValue","filter","content","map","info","i","title","infos","pad","index","imgSrc","alt"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Slider from '@material-ui/core/Slider';\nimport VolumeDown from '@material-ui/icons/VolumeDown';\nimport VolumeUp from '@material-ui/icons/VolumeUp';\nimport testAudioOriginal from \"data/testDataHD\";\nimport testDataHD from \"data/testDataHD\";\nimport hdContents from \"data/hdContents\";\nimport Section from \"components/Section\";\nimport englishIcon from \"../assets/language-icons/English.JPG\";\nimport hindiIcon from \"../assets/language-icons/Hindi.JPG\";\nimport kannadaIcon from \"../assets/language-icons/Kannada.JPG\";\nimport tamilIcon from \"../assets/language-icons/Tamil.JPG\";\nimport teluguIcon from \"../assets/language-icons/Telugu.JPG\";\n\n\n// const englishAudio = require.context(\"../../public/all-audio/English\", false);\n// const hindiAudio = require.context(\"../../public/all-audio/hindi\", false);\n// const kannadaAudio = require.context(\"../../public/all-audio/Kannada\", false);\n\nconst TestHD = () => {\n  const [randomIndexHD, setRandomIndexHD] = useState(0);\n  const [language, setLanguage] = useState(\"audioSrcEN\");\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [showTest, setShowTest] = useState(false);\n  const [HideLangSelect, setHideLangSelect] = useState(false);\n  const [testAudio, setTestAudio] = useState([...testAudioOriginal]);\n  const [selectedAnswer, setSelectedAnswer] = useState(\"\");\n  const [value, setValue] = useState(30);\n  const [audio, setAudio] = useState(null);\n  const [audioNumber, setAudioNumber] = useState(0);\n\n\n  useEffect(() => setAudio(document.getElementById(\"audio-element\")), [randomIndexHD, language, score, value, audio]);\n\n  const playAudio = () => {   \n    audio.volume = value/100.0;\n    // console.log(audio.volume);\n    audio.play();\n  };\n\n  const checkAnswer = () => {\n    if (selectedAnswer !== \"\" && selectedAnswer === testAudio[randomIndexHD].answer) {\n      setScore(score + 1);\n    } else {\n      setScore(score + 0);\n    };\n    // console.log(score)\n  }\n\n  const nextTestAudio = () => {\n    let currentAudioArray = testAudio;\n    if (currentAudioArray.length > 1) {\n      currentAudioArray.splice(randomIndexHD, 1);\n      setTestAudio(currentAudioArray);\n      setRandomIndexHD(Math.floor(Math.random() * testAudio.length));\n      setAudioNumber(audioNumber+1);\n    } else {\n      setShowScore(true);\n      setAudioNumber(0);\n      setTestAudio([...testAudioOriginal]);\n    }\n  }\n\n  const startTest = () => {\n    setShowTest(true);\n  }\n\n  const selectLanguage = (lang) => {\n    setHideLangSelect(true);\n    setLanguage(lang);\n  }\n\n  const submitAnswer = () => {\n    audio.pause();\n    setSelectedAnswer(\"\")\n    checkAnswer();\n    nextTestAudio()\n  }\n\n  const resetTest = () => {\n    setRandomIndexHD(0);\n    setScore(0);\n    setShowTest(false);\n    setHideLangSelect(false);\n    setShowScore(false);\n    setTestAudio([...testAudioOriginal]);\n    setAudio(document.getElementById(\"audio-element\"));\n  }\n\n  const handleToggle = (answer) => {\n    setSelectedAnswer(answer);\n    // console.log(answer);\n  }\n\n  const handleVolumeChange = (event, newValue) => {\n    setValue(newValue);\n    audio.volume = value/100.0;\n  };\n\n  return (\n    <div className=\"content-section\">\n      <div className=\"content-wrapper\">\n        {/*Choose Languages Section before entering the test */}\n        \n        <div className=\"section-header\">Hearing Test</div>\n        { showTest === false ?\n          (   <div className=\"test-content\">\n                <div className=\"section-description\">\n                  <div className=\"buttons-container\">\n                    <div\n                      key =\"hearingTestStart\"\n                      className=\"button start-button\"\n                      onClick={() => {\n                        startTest();\n                      }}\n                    >\n                      Start Test\n                    </div>\n                  </div>\n                  <div className=\"content-section\">\n                    {hdContents\n                      .filter((content) => content.filter === \"test\")\n                      .map((info, i) => (\n                        <div>\n                          <Section key={i} title={info.title} description={info.infos} />\n                        </div>\n                      ))}\n                  </div>\n                  <div className=\"content-section\">\n                    {hdContents\n                      .filter((content) => content.filter === \"instructions\")\n                      .map((info, i) => (\n                        <div>\n                          <Section key={i} title={info.title} description={info.infos} />\n                        </div>\n                      ))}\n                  </div>\n                </div>\n                <div className=\"buttons-container\">\n                  <div\n                    className=\"button\"\n                    onClick={() => {\n                      startTest();\n                    }}\n                  >\n                    Start Test\n                  </div>\n                </div>\n                <div>\n                  <audio id=\"audio-element\" key={testAudio[randomIndexHD][language]}>\n                    <source src={testAudio[randomIndexHD][language]} type=\"audio/mp3\"></source>\n                  </audio>\n                </div>\n              </div>\n          ) : HideLangSelect === false ? (\n            <div className=\"test-content\">\n              <div className=\"section-description\">\n                Select A Langugage:\n              </div>\n              <div className=\"buttons-container\">\n                <div\n                  className=\"language-button\"\n                  name=\"English\"\n                  onClick={\n                    ()=>selectLanguage(\"audioSrcEN\")\n                  }\n                >\n                  <img className=\"language-icon\" alt=\"english icon\" src={englishIcon}/>\n                </div>\n                <div\n                  className=\"language-button\"\n                  name=\"Hindi\"\n                  onClick={\n                    ()=>selectLanguage(\"audioSrcHI\")\n                  }\n                >\n                  <img className=\"language-icon\" alt=\"hindi icon\" src={hindiIcon}/>\n                </div>\n                <div\n                  className=\"language-button\"\n                  name=\"Kannada\"\n                  onClick={\n                    ()=>selectLanguage(\"audioSrcKA\")\n                  }\n                >\n                  <img className=\"language-icon\" alt=\"kannadaicon\" src={kannadaIcon}/>\n                </div>\n              </div>\n              <div className=\"line-break\"></div>\n              <div className=\"buttons-container\">\n                <div\n                  className=\"language-button\"\n                  name=\"Tamil\"\n                  onClick={\n                    ()=>selectLanguage(\"audioSrcTM\")\n                  }\n                >\n                  <img className=\"language-icon\" alt=\"tamil icon\"src={tamilIcon}/>\n                </div>\n                <div\n                  className=\"language-button\"\n                  name=\"Telugu\"\n                  onClick={\n                    ()=>selectLanguage(\"audioSrcTE\")\n                  }\n                >\n                  <img className=\"language-icon\" alt=\"telugu icon\" src={teluguIcon}/>\n                </div>\n              </div>\n              <div>\n                <audio id=\"audio-element\" key={testAudio[randomIndexHD][language]}>\n                  <source src={testAudio[randomIndexHD][language]} type=\"audio/mp3\"></source>\n                </audio>\n              </div>\n            </div>\n          ) : showScore === false ? (\n              <div className=\"test-content\">\n                <div className=\"section-description\">\n                  Press the play button, listen to the word and press the correct\n                  picture of the word. Then click submit. <b> When you submit, a new word will be loaded and you will need to click play again </b>\n                </div>\n                <div className=\"buttons-container\">\n                  <div className=\"button\" onClick={playAudio}>\n                    Play\n                  </div>\n                  <div className=\"slider-container\">\n                    <VolumeDown />\n                      <Slider value={value} onChange={handleVolumeChange} aria-labelledby=\"continuous-slider\" />\n                    <VolumeUp />\n                    {value}\n                  </div>\n                </div>\n                <div className=\"pad-container\">\n                  {testDataHD.map((pad,index) => (\n                    <div key={index} className={`pad ${selectedAnswer === pad.answer ? \"selected\" : \"\"}`}>\n                      <img\n                        src={pad.imgSrc}\n                        alt={pad.alt}\n                        onClick={() => {\n                          handleToggle(pad.answer);\n                        }}\n                      />\n                    </div>\n                  ))}\n                </div>\n                <div className=\"buttons-container\">\n                  <div\n                    className=\"button\"\n                    onClick={() => {\n                      submitAnswer();\n                    }}\n                  >\n                    Submit\n                  </div>\n                  <div className=\"counter-container\">\n                    { audioNumber } / 9 \n                  </div>\n                </div>\n                <div>\n                  <audio id=\"audio-element\" key={testAudio[randomIndexHD][language]}>\n                    <source src={testAudio[randomIndexHD][language]} type=\"audio/mp3\"></source>\n                  </audio>\n                </div>\n              </div>\n          ) : (\n                <div className=\"score-container\">\n                  <div className=\"score\">Your score is {score}/{testAudio.length}.</div>\n                  <div\n                    className=\"button\"\n                    onClick={() => {\n                      resetTest();\n                    }}\n                  >\n                    Close\n                  </div>\n                </div>\n          )}\n      </div>\n    </div>\n  );\n};\n\nexport default TestHD;\n"]},"metadata":{},"sourceType":"module"}