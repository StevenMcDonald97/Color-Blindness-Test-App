{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Steven/CS-Projects/Color-Blindness-Test-App/src/pages/TestHD.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Slider from '@material-ui/core/Slider';\nimport VolumeDown from '@material-ui/icons/VolumeDown';\nimport VolumeUp from '@material-ui/icons/VolumeUp';\nimport testAudioOriginal from \"data/testDataHD\";\nimport testDataHD from \"data/testDataHD\";\nimport hdContents from \"data/hdContents\";\nimport Section from \"components/Section\"; // const englishAudio = require.context(\"../../public/all-audio/English\", false);\n// const hindiAudio = require.context(\"../../public/all-audio/hindi\", false);\n// const kannadaAudio = require.context(\"../../public/all-audio/Kannada\", false);\n\nconst TestHD = () => {\n  _s();\n\n  const [randomIndexHD, setRandomIndexHD] = useState(0);\n  const [language, setLanguage] = useState(\"audioSrcEN\");\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [showTest, setShowTest] = useState(false);\n  const [HideLangSelect, setHideLangSelect] = useState(false);\n  const [testAudio, setTestAudio] = useState([...testAudioOriginal]);\n  const [selectedAnswer, setSelectedAnswer] = useState(\"\");\n  const [value, setValue] = useState(30);\n  const [audio, setAudio] = useState(null);\n  useEffect(() => setAudio(document.getElementById(\"audio-element\")), [randomIndexHD, language, score, value, audio]);\n\n  const playAudio = () => {\n    audio.volume = value / 100.0; // console.log(audio.volume);\n\n    audio.play();\n  };\n\n  const checkAnswer = () => {\n    if (selectedAnswer !== \"\" && selectedAnswer === testAudio[randomIndexHD].answer) {\n      setScore(score + 1);\n    } else {\n      setScore(score + 0);\n    }\n\n    ; // console.log(score)\n  };\n\n  const nextTestAudio = () => {\n    let currentAudioArray = testAudio;\n\n    if (currentAudioArray.length > 1) {\n      currentAudioArray.splice(randomIndexHD, 1);\n      setTestAudio(currentAudioArray);\n      setRandomIndexHD(Math.floor(Math.random() * testAudio.length));\n    } else {\n      setShowScore(true);\n      setTestAudio([...testAudioOriginal]);\n    }\n  };\n\n  const startTest = () => {\n    setShowTest(true);\n  };\n\n  const selectLanguage = lang => {\n    setHideLangSelect(true);\n    setLanguage(lang);\n  };\n\n  const submitAnswer = () => {\n    audio.pause();\n    checkAnswer();\n    nextTestAudio();\n  };\n\n  const resetTest = () => {\n    setRandomIndexHD(0);\n    setScore(0);\n    setShowTest(false);\n    setHideLangSelect(false);\n    setShowScore(false);\n    setTestAudio([...testAudioOriginal]);\n    setAudio(document.getElementById(\"audio-element\"));\n  };\n\n  const handleToggle = answer => {\n    setSelectedAnswer(answer); // console.log(answer);\n  };\n\n  const handleVolumeChange = (event, newValue) => {\n    setValue(newValue);\n    audio.volume = value / 100.0;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-header\",\n        children: \"Hearing Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), showTest === false ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-description\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button start-button\",\n              onClick: () => {\n                startTest();\n              },\n              children: \"Start Test\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-section \",\n            children: hdContents.filter(content => content.filter === \"about\").map((info, i) => /*#__PURE__*/_jsxDEV(Section, {\n              title: info.title,\n              description: info.infos\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-section\",\n            children: hdContents.filter(content => content.filter === \"types\").map((info, i) => /*#__PURE__*/_jsxDEV(Section, {\n              title: info.title,\n              description: info.infos\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-section\",\n            children: hdContents.filter(content => content.filter === \"test\").map((info, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Section, {\n                title: info.title,\n                description: info.infos\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-section\",\n            children: hdContents.filter(content => content.filter === \"instructions\").map((info, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Section, {\n                title: info.title,\n                description: info.infos\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button\",\n            onClick: () => {\n              startTest();\n            },\n            children: \"Start Test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"audio\", {\n            id: \"audio-element\",\n            children: /*#__PURE__*/_jsxDEV(\"source\", {\n              src: testAudio[randomIndexHD][language],\n              type: \"audio/mp3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 21\n            }, this)\n          }, testAudio[randomIndexHD][language], false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }, this) : HideLangSelect === false ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-description\",\n          children: \"Select A Langugage:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button\",\n            name: \"English\",\n            onClick: () => selectLanguage(\"audioSrcEN\"),\n            children: \"English\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button\",\n            name: \"Hindi\",\n            onClick: () => selectLanguage(\"audioSrcHI\"),\n            children: \"Hindi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button\",\n            name: \"Kannada\",\n            onClick: () => selectLanguage(\"audioSrcKA\"),\n            children: \"Kannada\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button\",\n            name: \"Tamil\",\n            onClick: () => selectLanguage(\"audioSrcTM\"),\n            children: \"Tamil\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button\",\n            name: \"Telugu\",\n            onClick: () => selectLanguage(\"audioSrcTE\"),\n            children: \"Telugu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"audio\", {\n            id: \"audio-element\",\n            children: /*#__PURE__*/_jsxDEV(\"source\", {\n              src: testAudio[randomIndexHD][language],\n              type: \"audio/mp3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 19\n            }, this)\n          }, testAudio[randomIndexHD][language], false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this) : showScore === false ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-description\",\n          children: \"Press the play button, listen to the word and press the correct picture of the word.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button\",\n            onClick: playAudio,\n            children: \"Play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slider-container\",\n            children: [/*#__PURE__*/_jsxDEV(VolumeDown, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Slider, {\n              value: value,\n              onChange: handleVolumeChange,\n              \"aria-labelledby\": \"continuous-slider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(VolumeUp, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 21\n            }, this), value]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pad-container\",\n          children: testDataHD.map((pad, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `pad ${selectedAnswer === pad.answer ? \"selected\" : \"\"}`,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: pad.imgSrc,\n              alt: pad.alt,\n              onClick: () => {\n                handleToggle(pad.answer);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 23\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [randomIndexHD, \"  -  \", testAudio[randomIndexHD][language]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button\",\n            onClick: () => {\n              submitAnswer();\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n            id: \"audio-element\",\n            children: /*#__PURE__*/_jsxDEV(\"source\", {\n              src: testAudio[randomIndexHD][language],\n              type: \"audio/mp3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 21\n            }, this)\n          }, testAudio[randomIndexHD][language], false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 19\n          }, this), \"4\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score\",\n          children: [\"Your score is \", score, \"/\", testAudio.length, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          onClick: () => {\n            resetTest();\n          },\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TestHD, \"sEjGx1Ga4EIN+IBJZ0YeF2gwO4U=\");\n\n_c = TestHD;\nexport default TestHD;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestHD\");","map":{"version":3,"sources":["/Users/Steven/CS-Projects/Color-Blindness-Test-App/src/pages/TestHD.js"],"names":["React","useEffect","useState","Slider","VolumeDown","VolumeUp","testAudioOriginal","testDataHD","hdContents","Section","TestHD","randomIndexHD","setRandomIndexHD","language","setLanguage","score","setScore","showScore","setShowScore","showTest","setShowTest","HideLangSelect","setHideLangSelect","testAudio","setTestAudio","selectedAnswer","setSelectedAnswer","value","setValue","audio","setAudio","document","getElementById","playAudio","volume","play","checkAnswer","answer","nextTestAudio","currentAudioArray","length","splice","Math","floor","random","startTest","selectLanguage","lang","submitAnswer","pause","resetTest","handleToggle","handleVolumeChange","event","newValue","filter","content","map","info","i","title","infos","pad","index","imgSrc","alt"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Slider from '@material-ui/core/Slider';\nimport VolumeDown from '@material-ui/icons/VolumeDown';\nimport VolumeUp from '@material-ui/icons/VolumeUp';\nimport testAudioOriginal from \"data/testDataHD\";\nimport testDataHD from \"data/testDataHD\";\nimport hdContents from \"data/hdContents\"\nimport Section from \"components/Section\"\n\n// const englishAudio = require.context(\"../../public/all-audio/English\", false);\n// const hindiAudio = require.context(\"../../public/all-audio/hindi\", false);\n// const kannadaAudio = require.context(\"../../public/all-audio/Kannada\", false);\n\nconst TestHD = () => {\n  const [randomIndexHD, setRandomIndexHD] = useState(0);\n  const [language, setLanguage] = useState(\"audioSrcEN\");\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [showTest, setShowTest] = useState(false);\n  const [HideLangSelect, setHideLangSelect] = useState(false);\n  const [testAudio, setTestAudio] = useState([...testAudioOriginal]);\n  const [selectedAnswer, setSelectedAnswer] = useState(\"\");\n  const [value, setValue] = useState(30);\n  const [audio, setAudio] = useState(null);\n\n  useEffect(() => setAudio(document.getElementById(\"audio-element\")), [randomIndexHD, language, score, value, audio]);\n\n  const playAudio = () => {   \n    audio.volume = value/100.0;\n    // console.log(audio.volume);\n    audio.play();\n  };\n\n  const checkAnswer = () => {\n    if (selectedAnswer !== \"\" && selectedAnswer === testAudio[randomIndexHD].answer) {\n      setScore(score + 1);\n    } else {\n      setScore(score + 0);\n    };\n    // console.log(score)\n  }\n\n  const nextTestAudio = () => {\n    let currentAudioArray = testAudio;\n    if (currentAudioArray.length > 1) {\n      currentAudioArray.splice(randomIndexHD, 1);\n      setTestAudio(currentAudioArray);\n      setRandomIndexHD(Math.floor(Math.random() * testAudio.length));\n    } else {\n      setShowScore(true);\n      setTestAudio([...testAudioOriginal]);\n    }\n  }\n\n  const startTest = () => {\n    setShowTest(true);\n  }\n\n  const selectLanguage = (lang) => {\n    setHideLangSelect(true);\n    setLanguage(lang);\n  }\n\n  const submitAnswer = () => {\n    audio.pause();\n    checkAnswer();\n    nextTestAudio()\n  }\n\n  const resetTest = () => {\n    setRandomIndexHD(0);\n    setScore(0);\n    setShowTest(false);\n    setHideLangSelect(false);\n    setShowScore(false);\n    setTestAudio([...testAudioOriginal]);\n    setAudio(document.getElementById(\"audio-element\"));\n  }\n\n  const handleToggle = (answer) => {\n    setSelectedAnswer(answer);\n    // console.log(answer);\n  }\n\n  const handleVolumeChange = (event, newValue) => {\n    setValue(newValue);\n    audio.volume = value/100.0;\n  };\n\n  return (\n    <div className=\"content-section\">\n      <div className=\"content-wrapper\">\n        {/*Choose Languages Section before entering the test */}\n        \n        <div className=\"section-header\">Hearing Test</div>\n        { showTest === false ?\n          (   <div className=\"test-content\">\n                <div className=\"section-description\">\n                  <div className=\"buttons-container\">\n                    <div\n                      className=\"button start-button\"\n                      onClick={() => {\n                        startTest();\n                      }}\n                    >\n                      Start Test\n                    </div>\n                  </div>\n                  <div className=\"content-section \">\n                    {hdContents\n                      .filter((content) => content.filter === \"about\")\n                      .map((info, i) => (\n                        <Section key={i} title={info.title} description={info.infos} />\n                      ))}\n                  </div>\n                  <div className=\"content-section\">\n                    {hdContents\n                      .filter((content) => content.filter === \"types\")\n                      .map((info, i) => (\n                        <Section key={i} title={info.title} description={info.infos} />\n                      ))}\n                  </div>\n                  <div className=\"content-section\">\n                    {hdContents\n                      .filter((content) => content.filter === \"test\")\n                      .map((info, i) => (\n                        <div>\n                          <Section key={i} title={info.title} description={info.infos} />\n                        </div>\n                      ))}\n                  </div>\n                  <div className=\"content-section\">\n                    {hdContents\n                      .filter((content) => content.filter === \"instructions\")\n                      .map((info, i) => (\n                        <div>\n                          <Section key={i} title={info.title} description={info.infos} />\n                        </div>\n                      ))}\n                  </div>\n                </div>\n                <div className=\"buttons-container\">\n                  <div\n                    className=\"button\"\n                    onClick={() => {\n                      startTest();\n                    }}\n                  >\n                    Start Test\n                  </div>\n                </div>\n                <div>\n                  <audio id=\"audio-element\" key={testAudio[randomIndexHD][language]}>\n                    <source src={testAudio[randomIndexHD][language]} type=\"audio/mp3\"></source>\n                  </audio>\n                </div>\n              </div>\n          ) : HideLangSelect === false ? (\n            <div className=\"test-content\">\n              <div className=\"section-description\">\n                Select A Langugage:\n              </div>\n              <div className=\"buttons-container\">\n                <div\n                  className=\"button\"\n                  name=\"English\"\n                  onClick={\n                    ()=>selectLanguage(\"audioSrcEN\")\n                  }\n                >\n                  English\n                </div>\n                <div\n                  className=\"button\"\n                  name=\"Hindi\"\n                  onClick={\n                    ()=>selectLanguage(\"audioSrcHI\")\n                  }\n                >\n                  Hindi\n                </div>\n                <div\n                  className=\"button\"\n                  name=\"Kannada\"\n                  onClick={\n                    ()=>selectLanguage(\"audioSrcKA\")\n                  }\n                >\n                  Kannada\n                </div>\n\n                <div\n                  className=\"button\"\n                  name=\"Tamil\"\n                  onClick={\n                    ()=>selectLanguage(\"audioSrcTM\")\n                  }\n                >\n                  Tamil\n                </div>\n                <div\n                  className=\"button\"\n                  name=\"Telugu\"\n                  onClick={\n                    ()=>selectLanguage(\"audioSrcTE\")\n                  }\n                >\n                  Telugu\n                </div>\n              </div>\n              <div>\n                <audio id=\"audio-element\" key={testAudio[randomIndexHD][language]}>\n                  <source src={testAudio[randomIndexHD][language]} type=\"audio/mp3\"></source>\n                </audio>\n              </div>\n            </div>\n          ) : showScore === false ? (\n              <div className=\"test-content\">\n                <div className=\"section-description\">\n                  Press the play button, listen to the word and press the correct\n                  picture of the word.\n                </div>\n                <div className=\"buttons-container\">\n                  <div className=\"button\" onClick={playAudio}>\n                    Play\n                  </div>\n                  <div className=\"slider-container\">\n                    <VolumeDown />\n                      <Slider value={value} onChange={handleVolumeChange} aria-labelledby=\"continuous-slider\" />\n                    <VolumeUp />\n                    {value}\n                  </div>\n                </div>\n                <div className=\"pad-container\">\n                  {testDataHD.map((pad,index) => (\n                    <div key={index} className={`pad ${selectedAnswer === pad.answer ? \"selected\" : \"\"}`}>\n                      <img\n                        src={pad.imgSrc}\n                        alt={pad.alt}\n                        onClick={() => {\n                          handleToggle(pad.answer);\n                        }}\n                      />\n                    </div>\n                  ))}\n                </div>\n                <div>{randomIndexHD}  -  {testAudio[randomIndexHD][language]}</div>\n                <div className=\"buttons-container\">\n                  <div\n                    className=\"button\"\n                    onClick={() => {\n                      submitAnswer();\n                    }}\n                  >\n                    Submit\n                  </div>\n                </div>\n                <div>\n                  <audio id=\"audio-element\" key={testAudio[randomIndexHD][language]}>\n                    <source src={testAudio[randomIndexHD][language]} type=\"audio/mp3\"></source>\n                  </audio>4\n                </div>\n              </div>\n          ) : (\n                <div className=\"score-container\">\n                  <div className=\"score\">Your score is {score}/{testAudio.length}.</div>\n                  <div\n                    className=\"button\"\n                    onClick={() => {\n                      resetTest();\n                    }}\n                  >\n                    Close\n                  </div>\n                </div>\n          )}\n      </div>\n    </div>\n  );\n};\n\nexport default TestHD;\n"]},"metadata":{},"sourceType":"module"}