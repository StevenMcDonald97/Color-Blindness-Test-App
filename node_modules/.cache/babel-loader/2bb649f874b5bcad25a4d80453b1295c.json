{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Steven/CS-Projects/Color-Blindness-Test-App/src/pages/TestFreq.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Slider from '@material-ui/core/Slider';\nimport VolumeDown from '@material-ui/icons/VolumeDown';\nimport VolumeUp from '@material-ui/icons/VolumeUp';\nimport testAudioOriginal from \"data/testPitchs\";\nimport hdContents from \"data/pitchContents\";\nimport Section from \"components/Section\"; // const englishAudio = require.context(\"../../public/all-audio/English\", false);\n// const hindiAudio = require.context(\"../../public/all-audio/hindi\", false);\n// const kannadaAudio = require.context(\"../../public/all-audio/Kannada\", false);\n\nconst TestPitch = () => {\n  _s();\n\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [showTest, setShowTest] = useState(false);\n  const [testAudio, setTestAudio] = useState([...testAudioOriginal]);\n  const [value, setValue] = useState(20);\n  const [audio, setAudio] = useState(null);\n  const [playTime, setPlayTime] = useState(0);\n  const [notSelected, setNotSelected] = useState(true);\n  useEffect(() => setAudio(document.getElementById(\"audio-element\")), [notSelected, score, value, audio, testAudio, playTime]);\n\n  const playAudio = () => {\n    let timeout = 100 * (Math.floor(Math.random() * 45) + 20);\n    setTimeout(function () {\n      var d = new Date();\n      setPlayTime(d.getTime());\n      audio.volume = value / 100.0;\n      audio.play();\n    }, timeout);\n  };\n\n  const checkAnswer = () => {\n    setNotSelected(false);\n    var d = new Date();\n    var clickTime = d.getTime(); // SET TIME T CLICK HEARD HERE\n\n    if (clickTime - playTime < 5000 && clickTime > playTime) {\n      setScore(score + 1);\n    } else {\n      setScore(score + 0);\n    }\n\n    ;\n  };\n\n  const nextTestAudio = () => {\n    setNotSelected(true);\n    setPlayTime(playTime - 6000);\n    let currentAudioArray = testAudio;\n\n    if (currentAudioArray.length > 1) {\n      currentAudioArray.splice(0, 1);\n      setTestAudio(currentAudioArray);\n    } else {\n      setShowScore(true);\n      setTestAudio([...testAudioOriginal]);\n    }\n  };\n\n  const startTest = () => {\n    setShowTest(true);\n  };\n\n  const submitAnswer = () => {\n    audio.pause();\n    checkAnswer();\n    nextTestAudio();\n  };\n\n  const passOnAnswer = () => {\n    setNotSelected(false);\n    audio.pause();\n    setPlayTime(0);\n    setScore(score + 0);\n    nextTestAudio();\n  };\n\n  const resetTest = () => {\n    setNotSelected(true);\n    setScore(0);\n    setShowTest(false);\n    setShowScore(false);\n    setTestAudio([...testAudioOriginal]);\n    setAudio(document.getElementById(\"audio-element\"));\n  };\n\n  const handleVolumeChange = (event, newValue) => {\n    setValue(newValue);\n    audio.volume = value / 100.0;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-header\",\n        children: \"Hearing Test for Frequencies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), showTest === false ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-description\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button start-button\",\n              onClick: () => {\n                startTest();\n              },\n              children: \"Start Test\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-section\",\n            children: hdContents.filter(content => content.filter === \"test\").map((info, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Section, {\n                title: info.title,\n                description: info.infos\n              }, `test-${i}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-section\",\n            children: hdContents.filter(content => content.filter === \"instructions\").map((info, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Section, {\n                title: info.title,\n                description: info.infos\n              }, `instructions-${i}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button\",\n            onClick: () => {\n              startTest();\n            },\n            children: \"Start Test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"audio\", {\n            id: \"audio-element\",\n            children: /*#__PURE__*/_jsxDEV(\"source\", {\n              src: testAudio[0][\"file\"],\n              type: \"audio/mp3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 21\n            }, this)\n          }, testAudio[0][\"file\"], false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }, this) : showScore === false ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-description\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Press the play button and listen for a tone. Press \\\"Heard\\\" if you hear the tone, or press \\\"Didn't hear\\\" if you do not hear it after 10 seconds.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"If you need to you can adjust the volume to a more comfortable level.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \" When you click either \\\"Didn't Hear\\\" or \\\"Heard\\\" the next audio will be loaded and you will need to press play again.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-header\",\n          children: [\" \", testAudio[0][\"pitch\"], \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button\",\n            onClick: playAudio,\n            children: \"Play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slider-container\",\n            children: [/*#__PURE__*/_jsxDEV(VolumeDown, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Slider, {\n              value: value,\n              onChange: handleVolumeChange,\n              \"aria-labelledby\": \"continuous-slider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(VolumeUp, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 21\n            }, this), value]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button\",\n            onClick: () => {\n              passOnAnswer();\n            },\n            children: \"Didn't hear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button\",\n            onClick: () => {\n              submitAnswer();\n            },\n            children: \"Heard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"audio\", {\n            id: \"audio-element\",\n            children: /*#__PURE__*/_jsxDEV(\"source\", {\n              src: testAudio[0][\"file\"],\n              type: \"audio/mp3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 21\n            }, this)\n          }, testAudio[0][\"file\"], false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score\",\n          children: [\"Your score is \", score, \"/\", testAudio.length, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          onClick: () => {\n            resetTest();\n          },\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TestPitch, \"cOu6bGvzNaqwfAaKw9NjA0LhdPM=\");\n\n_c = TestPitch;\nexport default TestPitch;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestPitch\");","map":{"version":3,"sources":["/Users/Steven/CS-Projects/Color-Blindness-Test-App/src/pages/TestFreq.js"],"names":["React","useEffect","useState","Slider","VolumeDown","VolumeUp","testAudioOriginal","hdContents","Section","TestPitch","score","setScore","showScore","setShowScore","showTest","setShowTest","testAudio","setTestAudio","value","setValue","audio","setAudio","playTime","setPlayTime","notSelected","setNotSelected","document","getElementById","playAudio","timeout","Math","floor","random","setTimeout","d","Date","getTime","volume","play","checkAnswer","clickTime","nextTestAudio","currentAudioArray","length","splice","startTest","submitAnswer","pause","passOnAnswer","resetTest","handleVolumeChange","event","newValue","filter","content","map","info","i","title","infos"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Slider from '@material-ui/core/Slider';\nimport VolumeDown from '@material-ui/icons/VolumeDown';\nimport VolumeUp from '@material-ui/icons/VolumeUp';\nimport testAudioOriginal from \"data/testPitchs\";\nimport hdContents from \"data/pitchContents\"\nimport Section from \"components/Section\"\n\n// const englishAudio = require.context(\"../../public/all-audio/English\", false);\n// const hindiAudio = require.context(\"../../public/all-audio/hindi\", false);\n// const kannadaAudio = require.context(\"../../public/all-audio/Kannada\", false);\n\nconst TestPitch = () => {\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [showTest, setShowTest] = useState(false);\n  const [testAudio, setTestAudio] = useState([...testAudioOriginal]);\n  const [value, setValue] = useState(20);\n  const [audio, setAudio] = useState(null);\n  const [playTime, setPlayTime] = useState(0);\n  const [notSelected, setNotSelected] = useState(true);\n\n  useEffect(() => setAudio(document.getElementById(\"audio-element\")), [notSelected, score, value, audio, testAudio, playTime]);\n\n  const playAudio = () => {\n    let timeout = 100*(Math.floor(Math.random() * 45) + 20);\n    setTimeout(function () {\n      var d = new Date();\n      setPlayTime(d.getTime());\n      audio.volume = value/100.0;\n      audio.play();\n    }, timeout); \n\n  };\n\n  const checkAnswer = () => {\n    setNotSelected(false);\n    var d = new Date();\n    var clickTime=d.getTime();\n    // SET TIME T CLICK HEARD HERE\n    if (clickTime-playTime < 5000 && clickTime>playTime){\n      setScore(score + 1);\n    } else {\n      setScore(score + 0);\n    };\n  }\n\n  const nextTestAudio = () => {\n    setNotSelected(true);\n    setPlayTime(playTime-6000);\n    let currentAudioArray = testAudio;\n    if (currentAudioArray.length > 1) {\n      currentAudioArray.splice(0, 1);\n      setTestAudio(currentAudioArray);\n    } else {\n      setShowScore(true);\n      setTestAudio([...testAudioOriginal]);\n    }\n  }\n\n  const startTest = () => {\n    setShowTest(true);\n  }\n\n  const submitAnswer = () => {\n    audio.pause();\n    checkAnswer();\n    nextTestAudio();\n  }\n\n  const passOnAnswer = () => {\n    setNotSelected(false);\n    audio.pause();\n    setPlayTime(0);\n    setScore(score + 0);\n    nextTestAudio();\n  }\n\n  const resetTest = () => {\n    setNotSelected(true);\n    setScore(0);\n    setShowTest(false);\n    setShowScore(false);\n    setTestAudio([...testAudioOriginal]);\n    setAudio(document.getElementById(\"audio-element\"));\n  }\n\n\n  const handleVolumeChange = (event, newValue) => {\n    setValue(newValue);\n    audio.volume = value/100.0;\n  };\n\n  return (\n    <div className=\"content-section\">\n      <div className=\"content-wrapper\">\n        {/*Choose Languages Section before entering the test */}\n        \n        <div className=\"section-header\">Hearing Test for Frequencies</div>\n        { showTest === false ?\n          (   <div className=\"test-content\">\n                <div className=\"section-description\">\n                  <div className=\"buttons-container\">\n                    <div\n                      className=\"button start-button\"\n                      onClick={() => {\n                        startTest();\n                      }}\n                    >\n                      Start Test\n                    </div>\n                  </div>\n                  <div className=\"content-section\">\n                    {hdContents\n                      .filter((content) => content.filter === \"test\")\n                      .map((info, i) => (\n                        <div>\n                          <Section key={`test-${i}`} title={info.title} description={info.infos} />\n                        </div>\n                      ))}\n                  </div>\n                  <div className=\"content-section\">\n                    {hdContents\n                      .filter((content) => content.filter === \"instructions\")\n                      .map((info, i) => (\n                        <div>\n                          <Section key={`instructions-${i}`} title={info.title} description={info.infos} />\n                        </div>\n                      ))}\n                  </div>\n                </div>\n                <div className=\"buttons-container\">\n                  <div\n                    className=\"button\"\n                    onClick={() => {\n                      startTest();\n                    }}\n                  >\n                    Start Test\n                  </div>\n                </div>\n                <div>\n                  <audio id=\"audio-element\" key={testAudio[0][\"file\"]}>\n                    <source src={testAudio[0][\"file\"]} type=\"audio/mp3\"></source>\n                  </audio>\n                </div>\n              </div>\n          ) : showScore === false ? (\n              <div className=\"test-content\">\n                <div className=\"section-description\">\n                  <p>Press the play button and listen for a tone. Press \"Heard\" if you hear the tone, or press \"Didn't hear\" if you do not hear it after 10 seconds.</p> \n                  <p>If you need to you can adjust the volume to a more comfortable level.</p>\n                  <p><b> When you click either \"Didn't Hear\" or \"Heard\" the next audio will be loaded and you will need to press play again.</b></p>\n                </div>\n                <div className=\"section-header\"> {testAudio[0][\"pitch\"]} </div>\n                <div className=\"buttons-container\">\n                  <div className=\"button\" onClick={playAudio}>\n                    Play\n                  </div>\n                  <div className=\"slider-container\">\n                    <VolumeDown />\n                      <Slider value={value} onChange={handleVolumeChange} aria-labelledby=\"continuous-slider\" />\n                    <VolumeUp />\n                    {value}\n                  </div>\n                </div>\n                <div className=\"buttons-container\">\n                  <div\n                    className=\"button\"\n                    onClick={() => {\n                      passOnAnswer();\n                    }}\n                  >\n                    Didn't hear\n                  </div>\n                  <div\n                    className=\"button\"\n                    onClick={() => {\n                      submitAnswer();\n                    }}\n                  >\n                    Heard\n                  </div>\n                </div>\n                <div>\n                  <audio id=\"audio-element\" key={testAudio[0][\"file\"]}>\n                    <source src={testAudio[0][\"file\"]} type=\"audio/mp3\"></source>\n                  </audio>\n                </div>\n              </div>\n          ) : (\n                <div className=\"score-container\">\n                  <div className=\"score\">Your score is {score}/{testAudio.length}.</div>\n                  <div\n                    className=\"button\"\n                    onClick={() => {\n                      resetTest();\n                    }}\n                  >\n                    Close\n                  </div>\n                </div>\n          )}\n      </div>\n    </div>\n  );\n};\n\nexport default TestPitch;\n"]},"metadata":{},"sourceType":"module"}